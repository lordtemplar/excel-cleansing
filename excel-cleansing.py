import streamlit as st
import pandas as pd
from cleansing import clean_data
from unit_groups import unit_groups, count_by_group, count_by_unit

st.set_page_config(layout="centered")  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ layout ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö "centered"

st.title("‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Excel ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢")

# Upload Excel file
uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel", type=["xlsx"])

if uploaded_file is not None:
    try:
        # Load the uploaded file into a DataFrame
        df = pd.read_excel(uploaded_file)

        # Display original data
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö (‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î):")
        st.dataframe(df, use_container_width=True)

        # Clean the data and generate a report
        cleaned_df, clean_report = clean_data(df)

        # Display cleaned data
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß:")
        st.dataframe(cleaned_df, use_container_width=True)

        # Edit unit names
        st.subheader("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢:")
        unique_units = cleaned_df["‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î(‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ù‡∏∂‡∏Å‡∏ó‡∏´‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà)"].unique()

        # Select unit to edit
        selected_unit = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", options=unique_units)

        # Input new name
        new_name = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πà‡∏ß‡∏¢:", value=selected_unit)

        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
            # Apply changes to the DataFrame
            cleaned_df["‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î(‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ù‡∏∂‡∏Å‡∏ó‡∏´‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà)"] = cleaned_df["‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î(‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ù‡∏∂‡∏Å‡∏ó‡∏´‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà)"].replace({selected_unit: new_name})
            st.success(f"‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢ '{selected_unit}' ‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô '{new_name}' ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")

            # Display updated data
            st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢:")
            st.dataframe(cleaned_df, use_container_width=True)

        # Display clean report
        st.subheader("‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
        st.dataframe(clean_report, use_container_width=True)

        # Count people by group
        st.subheader("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°:")
        group_counts = count_by_group(cleaned_df, unit_groups)
        st.dataframe(group_counts, use_container_width=True)

        # Count people by unit
        st.subheader("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πà‡∏ß‡∏¢:")
        unit_counts = count_by_unit(cleaned_df)

        # Add total row to unit counts
        total_row = pd.DataFrame([["‡∏£‡∏ß‡∏°", unit_counts["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô"].sum(), ""]], columns=unit_counts.columns)
        unit_counts = pd.concat([unit_counts, total_row], ignore_index=True)

        st.dataframe(unit_counts, use_container_width=True)

        # Provide download link for the cleaned and updated data
        st.subheader("‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß:")
        @st.cache_data
        def convert_df_to_excel(dataframe):
            from io import BytesIO
            output = BytesIO()
            with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
                dataframe.to_excel(writer, index=False, sheet_name='Cleaned Data')
            processed_data = output.getvalue()
            return processed_data

        cleaned_file = convert_df_to_excel(cleaned_df)
        st.download_button(
            label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel",
            data=cleaned_file,
            file_name="Updated_Cleaned_Data.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        )
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
else:
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
